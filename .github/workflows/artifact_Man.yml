name: Create Artifact

on:
  workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: node_modules
          key: buildCachev25

      - name: Cache
        id: cache2
        uses: actions/cache@v2.1.6
        with:
          path: Mod Manager/node_modules
          key: buildCache2v20

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Prep
        run: |
          npm install -g pkg typescript

      - name: Install GUI dependencies
        if: steps.cache2.outputs.cache-hit != 'true'
        run: |
          cd "Mod Manager"
          npm install
          cd ../

      - name: Build GUI
        run: |
          cd "Mod Manager"
          npm run build
          cd ../

      - name: Ready for zip
        run: |
          New-Item -ItemType Directory dist
          New-Item -ItemType Directory dist/Third-Party
          New-Item -ItemType Directory dist/Info
          New-Item -ItemType Directory dist/API
          New-Item -ItemType Directory "dist/Mod Manager"
          robocopy ".\Mod Manager\dist\win-unpacked" "./dist/Mod Manager" /COPYALL /E; if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }
          copy Deploy.exe dist
          New-Item -Path dist -Name "Mod Manager.cmd" -ItemType "file" -Value "@echo off`ncd `"Mod Manager`"`nstart `"`" `"Mod Manager.exe`""

      - name: Zip
        uses: TheDoctor0/zip-release@4fb9e4ff72847dd3d1c111cf63834e353ed7cb3d
        with:
          filename: Release.zip
          directory: dist

      - uses: actions/upload-artifact@v2
        with:
          name: Output
          path: dist/Release.zip
